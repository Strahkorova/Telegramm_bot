from time import sleep
from config import bot
from Class_vent import calculation, assimialtion_thermo_and_cool, thermo_refrigeration, tools
import dialogs
from dialogs import Messages, Sticers
from database import Database, Base
import database


@bot.message_handler(commands=['start'])
#–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–æ–¥–µ–ª–∏
def start(mess):
    Base.metadata.create_all(bind=database.engine)      #–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    bot.send_message(mess.chat.id, Messages.start(mess))
    if mess.from_user.id == 1125053880:
        bot.send_message(mess.chat.id, '–ö–∞–∫–æ–≤—ã –±—É–¥—É—Ç —É–∫–∞–∑–∞–Ω–∏—è –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä?', reply_markup=dialogs.markup)
    else:
        bot.send_message(mess.chat.id, Messages.start_djedai(mess), parse_mode='html')


#–ù–∞—á–∞–ª–∞–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –ø—Ä–µ–¥–ª–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É
@bot.message_handler(commands=['I_am_ready', 'I_am_not_ready', 'add_base', 'select_all_base',
                               'delete_base_all', 'delete_base', 'select_base'])
def start_quetion(message):
    answer = message.text
    if answer == '/I_am_not_ready':
        bot.send_message(message.chat.id, '–ù–µ –≤–æ–ª–Ω—É–π—Å—è —é–Ω—ã–π –ø–∞–¥–∞–≤–∞–Ω! –°–≤–µ—Ç–ª–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø—É—Ç—å –≤–µ—Ä–Ω—ã–π –∫ —Å–∏–ª–µ.'
                                          '–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–±—Ä–µ—Å—Ç–∏ —Å–∏–ª—É —Ä–∞–∑—É–º–∞!!!', reply_markup=dialogs.markup)
    elif answer == '/I_am_ready' or answer == '/add_base':
        hop = bot.send_message(message.chat.id, '–ö—Ç–æ –∞–≤—Ç–æ—Ä –Ω–∞—É—á–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞?')
        bot.register_next_step_handler(hop, autor_tezis)
    elif answer == '/select_all_base':
        Database.select_all(message)
    elif answer == '/delete_base_all':
        Database.delete_all(message)
    elif answer == '/delete_base':
        hop = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ id —É–≤–∞–∂–∞–µ–º—ã–π –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä')
        bot.register_next_step_handler(hop, delete_with_base)
    elif answer == '/select_base':
        hop = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ id —É–≤–∞–∂–∞–µ–º—ã–π –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä')
        bot.register_next_step_handler(hop, select_with_base)

def autor_tezis(message):
    global autor
    autor = message.text
    hop = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –∑–∞–∫–æ–Ω')
    bot.register_next_step_handler(hop, insert_in_base_autor)

def insert_in_base_autor(message):
    global text_tezis
    text_tezis = message.text
    Database.insert(message, autor, text_tezis)
    bot.send_sticker(message.chat.id, Sticers.yoda, reply_markup=dialogs.markup)

def delete_with_base(message):
    id_tezis = message.text
    Database.delete(message, id_tezis)

def select_with_base(message):
    id_tezis = message.text
    Database.select_one(message, id_tezis)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "vent-1":
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞:\n –ö—Ä—É–≥–ª—ã–π - /round \n –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π - /rectangle',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == "vent-2" or call.data == "vent-6":
        global cagi
        cagi = call.data
        num = bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ –≤–æ–∑–¥—É—Ö–∞ –≤ –º3/—á–∞—Å')
        bot.register_next_step_handler(num, scor_1)
    elif call.data == "vent-3":
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞:\n –ö—Ä—É–≥–ª—ã–π - /round_1 \n –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π - /rectangle_1',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == "vent-4":
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –≤–∏–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞:\n –ù–∞–≥—Ä–µ–≤ - /heat \n –û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ - /cool',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == "vent-5":
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –∞—Å—Å–∏–º–∏–ª—è—Ü–∏–∏:\n –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–ø–ª–æ—Ç—ã - /delete_heat \n –£–¥–∞–ª–µ–Ω–∏–µ –≤–ª–∞–≥–∏ - /delete_water',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == 'heco-1':
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª—è:\n –í–æ–¥–∞ - /water \n –ì–ª–∏–∫–æ–ª—å - /antifriz',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == 'heco-2':
        bot.edit_message_text(f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø —Ç—Ä—É–±—ã:\n –ü–ª–∞—Å—Ç–∏–∫ PN25 - /plastic \n –°—Ç–∞–ª—å - /steel \n –ú–µ–¥—å - /cuprum',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == 'heco-3':
        num = bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª—è, –≤ –º3/—á–∞—Å')
        bot.register_next_step_handler(num, regulation)
    elif call.data == 'properties-1':
        bot.edit_message_text(f'–ö–∞–∫–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ç–µ–ø–ª–æ–æ—Ç–¥–∞—á–∏ –ø—Ä–∏–Ω—è—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–µ–≤):'
                              f'\n –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - /one_layer \n –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ - /many_layers',
            call.message.chat.id, call.message.message_id, parse_mode='html')
    elif call.data == 'properties-2':
        bot.edit_message_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:\n –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - /temperature '
                              f'\n –î–∞–≤–ª–µ–Ω–∏–µ - /pressure \n –ö–æ–ª-–≤–æ —Ç–µ–ø–ª–æ—Ç—ã - /number_heat',
            call.message.chat.id, call.message.message_id, parse_mode='html')


#–†–∞—Å—á–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π Kvs –¥–ª—è —Ä–µ–≥—É–ª–∏—Ä—É—é—â–µ–π –∞—Ä–º–∞—Ç—É—Ä—ã
def regulation(message):
    global Gvs
    Gvs = message.text.replace(',', '.')
    if Gvs == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        presure = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –≥–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–æ–π —Å–µ—Ç–∏, –ë–∞—Ä')
        bot.register_next_step_handler(presure, Kvs_system)

def Kvs_system(message):
    global dP
    dP = message.text.replace(',', '.')
    if dP == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        K = (1.1*float(Gvs))/(float(dP)**0.5)
        bot.send_message(message.chat.id, (
            f'–í–∞–º {message.from_user.first_name} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ - {round(K, 3)} –º3/—á–∞—Å –ø—Ä–æ–ø—É—Å–∫–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ–≥—É–ª–∏—Ä—É—é—â–µ–≥–æ –∫–ª–∞–ø–∞–Ω–∞! üò±'))
        Database.select_random(message)

#–†–∞—Å—á–µ—Ç –ø–ª–æ—â–∞–¥–∏ —Å–µ—á–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞ –∏ —Ä–∞–∑–º–µ—Ä–∞ –¥–µ—Ñ–ª–µ–∫—Ç–æ—Ä–∞ –¶–ê–ì–ò
def scor_1(message):
    global L
    L = message.text.replace(',', '.')
    if L == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if cagi == 'vent-2':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –º/—Å')
            bot.register_next_step_handler(operu, scor_2)
        elif cagi == 'vent-6':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –º/—Å,'
                                                      '–í–ê–ñ–ù–û: –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–≤–Ω–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ—Ç—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –°–ü "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–ª–∏–º–∞—Ç–æ–ª–æ–≥–∏—è"!')
            bot.register_next_step_handler(operu, scor_2)

def scor_2(message):
    if message.text == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        calculation.ploshad_and_CAGI(message, L, cagi)


########################################################################################################

#–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–µ–ª–∏—á–∏–Ω
@bot.message_handler(commands=['temperature', 'pressure', 'number_heat'])
def converter(message):
    global parametr
    parametr = message.text
    if parametr == '/temperature':
        op = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É: \n –ö–µ–ª—å–≤–∏–Ω - /K \n –≥—Ä–∞–¥—É—Å –¶–µ–ª—å—Å–∏—è ‚ÑÉ - /C \n '
                                               '–≥—Ä–∞–¥—É—Å –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞ ‚Ñâ - /F \n –≥—Ä–∞–¥—É—Å –†–∞–Ω–∫–∏–Ω–∞ ¬∞R - /R', parse_mode='html')
        bot.register_next_step_handler(op, temperature)
    elif parametr == '/number_heat':
        hop = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É: \n –∫–í—Ç - /kBt \n –ì–∫–∞–ª - /Gkall', parse_mode='html')
        bot.register_next_step_handler(hop, number_heat)
    elif parametr == '/pressure':
        op = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É: \n –∫–ü–∞ - /kPa \n –∫–≥—Å/—Å–º2 - /kgs_cm2'
                                               '\n –º.–≤–æ–¥.—Å—Ç - /m_water_st \n –ë–∞—Ä - /Bar \n –º–º.—Ä—Ç.—Å—Ç - /mm_rt_st', parse_mode='html')
        bot.register_next_step_handler(op, pressure)

def temperature(message):
    global param_convert
    param_convert = message.text
    if param_convert == '/K':
        t = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –ö–µ–ª—å–≤–∏–Ω–∞—Ö')
        bot.register_next_step_handler(t, start_convert)
    elif param_convert == '/C':
        t = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è')
        bot.register_next_step_handler(t, start_convert)
    elif param_convert == '/F':
        t = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞')
        bot.register_next_step_handler(t, start_convert)
    elif param_convert == '/R':
        t = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –†–∞–Ω–∫–∏–Ω–∞')
        bot.register_next_step_handler(t, start_convert)
    elif param_convert == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')


def number_heat(message):
    global param_convert
    param_convert = message.text
    if param_convert == '/kBt':
        Kv = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –∫–í—Ç')
        bot.register_next_step_handler(Kv, start_convert)
    elif param_convert == '/Gkall':
        Gk = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –ì–∫–∞–ª–ª')
        bot.register_next_step_handler(Gk, start_convert)
    elif param_convert == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')

def pressure(message):
    global param_convert
    param_convert = message.text
    if param_convert == '/kPa':
        kPa = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –∫–í—Ç')
        bot.register_next_step_handler(kPa, start_convert)
    elif param_convert == '/kgs_cm2':
        kgs_cm2 = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –∫–≥—Å/—Å–º2')
        bot.register_next_step_handler(kgs_cm2, start_convert)
    elif param_convert == '/Bar':
        Bar = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –ë–∞—Ä')
        bot.register_next_step_handler(Bar, start_convert)
    elif param_convert == '/m_water_st':
        m_water_st = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –º.–≤–æ–¥.—Å—Ç')
        bot.register_next_step_handler(m_water_st, start_convert)
    elif param_convert == '/mm_rt_st':
        mm_rt_st = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É –≤ –º–º.—Ä—Ç.—Å—Ç')
        bot.register_next_step_handler(mm_rt_st, start_convert)
    elif param_convert == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')

def start_convert(message):
    T = message.text.replace(',', '.')
    if T == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    elif parametr == '/temperature':
        tools.temperature_conv(message, T, param_convert)
        Database.select_random(message)
    elif parametr == '/pressure':
        tools.pressure_conv(message, T, param_convert)
        Database.select_random(message)
    elif parametr == '/number_heat':
        tools.heat_conv(message, T, param_convert)
        Database.select_random(message)



#–†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏ –¥–ª—è –æ–¥–Ω–æ—Å–ª–æ–π–Ω–æ–π –∏ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ–π —Å—Ç–µ–Ω–∫–∏
@bot.message_handler(commands=['one_layer', 'many_layers'])
def zero_step(message):
    global layer
    layer = message.text
    one_step(message)

def one_step(message):
    num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ç–æ–ª—â–∏–Ω—É —Å–ª–æ—è –≤ –º–º')
    bot.register_next_step_handler(num, two_step)

def two_step(message):
    global tolshina
    tolshina = message.text.replace(',', '.')
    if tolshina == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏ —Å–ª–æ—è –≤ –í—Ç/(–º¬≤*–ö)')
        bot.register_next_step_handler(num, three_step)

def three_step(message):
    global teploprovodnost
    teploprovodnost = message.text.replace(',', '.')
    if teploprovodnost == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        quethion = bot.send_message(message.chat.id, f'–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å–ª–æ–π?:\n –î–∞ - /Yes \n –ù–µ—Ç - /No', parse_mode='html')
        bot.register_next_step_handler(quethion, four_step)

koeff_thermo = {} #–•—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—â–∏–Ω–∞ –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—Ä —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏, –≥–¥–µ —Ç–æ–ª—â–∏–Ω–∞ —ç—Ç–æ –∫–ª—é—á

def four_step(message):
    global yes_no
    yes_no = message.text
    if yes_no == '/No':
        if not koeff_thermo:
            tools.teploperedacha(message, teploprovodnost, tolshina)
        else:
            koeff_thermo[tolshina] = teploprovodnost
            if layer == '/many_layers':
                num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–æ—Ç–¥–∞—á–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤ –í—Ç/(–º¬≤*–ö)')
                bot.register_next_step_handler(num, five_step)
            elif layer == '/one_layer':
                tools.koeff_teplo(message, koeff_thermo, 8, 21)
                koeff_thermo.clear()
    elif yes_no == '/Yes':
        koeff_thermo[tolshina] = teploprovodnost
        one_step(message)
    elif yes_no == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')


def five_step(message):
    global alfa1
    alfa1 = message.text.replace(',', '.')
    if alfa1 == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–æ—Ç–¥–∞—á–∏ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤ –í—Ç/(–º¬≤*–ö)')
        bot.register_next_step_handler(num, six_step)

def six_step(message):
    global alfa2
    alfa2 = message.text.replace(',', '.')
    if alfa2 == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        tools.koeff_teplo(message, koeff_thermo, alfa1, alfa2)
        koeff_thermo.clear()




#–†–∞—Å—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª—è –≤ —Ç—Ä—É–±–µ
@bot.message_handler(commands=['water', 'antifriz', 'plastic', 'steel', 'cuprum'])
def open_thermo(message):
    global comm_water
    comm_water = message.text
    if comm_water == '/water' or comm_water == '/antifriz':
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ø–ª–æ–≤—É—é –Ω–∞–≥—Ä—É–∑–∫—É, –ø–µ—Ä–µ–Ω–æ—Å–∏–º—É—é —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª–µ–º –≤ –∫–í—Ç')
        bot.register_next_step_handler(num, teplo_water)
    elif comm_water == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª—è –≤ –∫–≥/—Å')
        bot.register_next_step_handler(num, plotnost_water)

def teplo_water(message):
    global Q
    Q = message.text.replace(',', '.')
    if Q == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        plot = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –ø–æ –≤–æ–¥–µ, ‚Ñâ')
        if comm_water == '/water':
            bot.register_next_step_handler(plot, rashet_rashod_water)
        elif comm_water == '/antifriz':
            bot.register_next_step_handler(plot, teploemkost)

def teploemkost(message):
    global dt
    dt = message.text.replace(',', '.')
    if dt == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        plot = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —É–¥–µ–ª—å–Ω—É—é —Ç–µ–ø–ª–æ–µ–º–∫–æ—Å—Ç—å –≥–ª–∏–∫–æ–ª—è, –∫–î–∂/(–∫–≥*‚ÑÉ)')
        bot.register_next_step_handler(plot, rashet_rashod_water)

def plotnost_water(message):
    global Gw
    Gw = message.text.replace(',', '.')
    if Gw == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        plot = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Ç–µ–ø–ª–æ–Ω–æ—Å–∏—Ç–µ–ª—è, –∫–≥/–º3')
        bot.register_next_step_handler(plot, rashet_rashod_water)

def rashet_rashod_water(message):
    dt = message.text.replace(',', '.')
    if dt == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if comm_water == '/water' or comm_water == '/antifriz':
            thermo_refrigeration.rashod_teplonositel(message, Q, dt, comm_water)
        else:
            thermo_refrigeration.scorost_teplonositel(message, Gw, comm_water)


#–∞—Å—Å–∏–º–∏–ª—è—Ü–∏—è —Ç–µ–ø–ª–æ- –∏ –≤–ª–∞–≥–æ–∏–∑–±—ã—Ç–∫–æ–≤
@bot.message_handler(commands=['delete_heat', 'delete_water'])
def open(message):
    global comm_assim
    comm_assim = message.text
    if comm_assim == '/delete_heat':
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º–æ–π —Ç–µ–ø–ª–æ—Ç—ã –≤ –∫–í—Ç')
        bot.register_next_step_handler(num, plotnost_assim)
    elif comm_assim == '/delete_water':
        num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º–æ–π –≤–ª–∞–≥–∏ –≤ –≥/—á–∞—Å')
        bot.register_next_step_handler(num, plotnost_assim)

def plotnost_assim(message):
    global Q
    Q = message.text.replace(',', '.')
    if Q == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        plot = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –∫–≥/–º3')
        bot.register_next_step_handler(plot, delta_first)

def delta_first(message):
    global p
    p = message.text.replace(',', '.')
    if p == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if comm_assim == '/delete_heat':
            num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø—Ä–∏—Ç–æ—á–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –≤ ‚ÑÉ')
            bot.register_next_step_handler(num, delta_second)
        elif comm_assim == '/delete_water':
            num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–∏—Ç–æ—á–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –≥/–∫–≥')
            bot.register_next_step_handler(num, delta_second)

def delta_second(message):
    global t1
    t1 = message.text.replace(',', '.')
    if t1 == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if comm_assim == '/delete_heat':
            num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É —É–¥–∞–ª—è–µ–º–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –≤ ‚ÑÉ')
            bot.register_next_step_handler(num, rash_assim)
        elif comm_assim == '/delete_water':
            num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É–¥–∞–ª—è–µ–º–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –≥/–∫–≥')
            bot.register_next_step_handler(num, rash_assim)

def rash_assim(message):
    if message.text == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        assimialtion_thermo_and_cool.assimilation(message, Q, t1, p, comm_assim)


#–†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã –∏ —Ö–æ–ª–æ–¥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–¥—É—Ö–∞
@bot.message_handler(commands=['heat', 'cool'])
def heat_and_cool(message):
    global heatcool
    heatcool = message.text
    num = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ –≤–æ–∑–¥—É—Ö–∞ –≤ –º3/—á–∞—Å')
    bot.register_next_step_handler(num, plotnost)

def plotnost(message):
    global L
    L = message.text.replace(',', '.')
    if L == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        plot = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –∫–≥/–º3')
        bot.register_next_step_handler(plot, delta)

def delta(message):
    global p
    p = message.text.replace(',', '.')
    if p == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        thermo = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –ø–æ –≤–æ–∑–¥—É—Ö—É –≤ ‚ÑÉ')
        bot.register_next_step_handler(thermo, rash)

def rash(message):
    if message.text == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        assimialtion_thermo_and_cool.thermo_cool(message, L, p, heatcool)


#–†–∞—Å—á–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞ –∏ —Ä–∞—Å—Ö–æ–¥ –≤ –∫—Ä—É–≥–ª–æ–º –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–µ
@bot.message_handler(commands=['round', 'round_1'])
def round_start(message):
    global round_com
    round_com = message.text
    num = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞ –≤ –º–º')
    bot.register_next_step_handler(num, round_2)

def round_2(message):
    global D
    D = message.text.replace(',', '.')
    if D == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if round_com == '/round':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ –≤–æ–∑–¥—É—Ö–∞ –≤ –º3/—á–∞—Å')
            bot.register_next_step_handler(operu, round_3)
        elif round_com == '/round_1':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –º/—Å')
            bot.register_next_step_handler(operu, round_3)

def round_3(message):
    if message.text == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        F = (3.14 * (float(D)/1000) ** 2) / 4
        if round_com == '/round':
            calculation.scorost(message, F)
        elif round_com == '/round_1':
            calculation.rashod(message, F)


#–†–∞—Å—á–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞ –∏ —Ä–∞—Å—Ö–æ–¥ –≤ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–º –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–µ
@bot.message_handler(commands=['rectangle', 'rectangle_1'])
def rectangle_1(message):
    global rectangle_com
    rectangle_com = message.text
    num = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞ –≤ –º–º')
    bot.register_next_step_handler(num, rectangle_2)

def rectangle_2(message):
    global A
    A = message.text.replace(',', '.')
    if A == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        num_2 = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–∞ –≤ –º–º')
        bot.register_next_step_handler(num_2, rectangle_3)

def rectangle_3(message):
    global B
    B = message.text.replace(',', '.')
    if B == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        if rectangle_com == '/rectangle':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ –≤–æ–∑–¥—É—Ö–∞ –≤ –º3/—á–∞—Å')
            bot.register_next_step_handler(operu, rectangle_4)
        elif rectangle_com == '/rectangle_1':
            operu = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –º/—Å')
            bot.register_next_step_handler(operu, rectangle_4)
        else:
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')

def rectangle_4(message):
    if message.text == '/stop':
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
    else:
        F = (float(A)*float(B))/1000000
        if rectangle_com == '/rectangle':
            calculation.scorost(message, F)
        elif rectangle_com == '/rectangle_1':
            calculation.rashod(message, F)



################################################################################################


@bot.message_handler(commands=['–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è'])
def ventil(message):
    bot.send_message(message.chat.id, Messages.ventilation(message), reply_markup=dialogs.but_ventilation)

@bot.message_handler(commands=['–¢–µ–ø–ª–æ-–∏_–•–æ–ª–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ'])
def thermo_cooling(message):
    bot.send_message(message.chat.id, Messages.thermocooling(message), reply_markup=dialogs.but_heat_cool)

@bot.message_handler(commands=['–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'])
def refrigeration(message):
    bot.send_message(message.chat.id, Messages.properties(message), reply_markup=dialogs.but_holod)

@bot.message_handler(commands=['DataBase'])
def dataBase_all(message):
    if message.from_user.id == 1125053880:
        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä:\n –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É - /add_base'
                          f'\n –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã - /delete_base_all \n –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã –ø–æ id - /delete_base'
                                          f'\n –í—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –∏–∑ –±–∞–∑—ã - /select_all_base'
                          f' \n –í—ã–≥—Ä—É–∑–∏—Ç—å –∏–∑ –±–∞–∑—ã –ø–æ id - /select_base', parse_mode='html')
    else:
        bot.send_message(message.chat.id, f'–®–∞–≥ –∫ —Ç–µ–º–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –ø—ã—Ç–∞–µ—à—å—Å—è —Å–¥–µ–ª–∞—Ç—å —Ç—ã!', )
        bot.send_sticker(message.chat.id, Sticers.Nooo)


while True:
    try:
        bot.polling(none_stop=True)
    except Exception as _ex:
        print(_ex)
        sleep(15)